# # фильтр
# def isplus(x):
#     return x > 0

# sp = [1, 2, -5, -6, 4]
# res = list(filter(isplus, sp))

# res = list(filter(lambda x: x > 0, sp))
# # print(res)

# # преобразование
# def sqr(x):
#     return x ** 2

# sp = [1, 2, -5, -6, 4]
# res = list(map(sqr, sp))

# res = list(map(lambda x: x ** 2, sp))
# # print(res)

# # lst = [int(i) for i in input().split()]
# # lst = list(map(int, input().split()))
# # print(lst)

# # Сортировка о длине
# sp = ['z', 'gghhhhhhhhh', 'aaaaaa']
# # sp.sort(key=lambda x: len(x))
# # sp.sort(key=lambda x: -len(x))
# sp.sort(key=lambda x: len(x), reverse=True)
# # print(sp)

# # Максимум
# sp = ['ror', 'toooo', 'rrrro']
# print(max(sp, key=lambda x: x.count('o')))


# 1.	В файле находится N натуральных чисел, записанных через пробел. Среди чисел не хватает одного, чтобы выполнялось условие A[i] - 1 = A[i-1]. Найдите это число.
# Входные данные	Выходные данные
# 1 2 3 5 6 7 8 	4

# lst = list(map(int, input().split()))
# for i in range(1, len(lst)):
#     if lst[i] - lst[i - 1] > 1:
#         print(lst[i] - 1)

# 2.	Напишите функцию triangle(a, b, c), которая принимает на вход три длины отрезков и определяет, можно ли из этих отрезков составить треугольник.
# Входные данные	                     Выходные данные
# triangle(1, 1, 2)	               Это не треугольник
# triangle(7, 6, 10)
# 	                                Это треугольник

# def triangle(a, b, c):
#     if a + b > c and b + c > a and a + c > b:
#         print("Это треугольник")
#     else:
#         print("Это не треугольник")


# triangle(7, 6, 12)

# 3.	Напишите программу, которая подсчитает и выведет сумму квадратов всех двузначных чисел,
#  делящихся на 9.
# При решении задачи используйте комбинацию функций filter, map, sum.
# Обратите внимание: на 9 должно делиться исходное двузначное число, а не его квадрат.

# sp = range(10, 100)
# sp = filter(lambda x: x % 9 == 0, sp)
# sp = map(lambda x: x ** 2, sp)
# print(sum(sp))

# sp = [i**2 for i in range(10,100) if i % 9 == 0]
# print(sum(sp))

# 4.	Вводится список целых чисел в одну строчку через пробел. Необходимо оставить в нем только двузначные числа. Реализовать программу с использованием функции filter. Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.
#  пример  - 8 11 0 -23 140 1 => 11 -23

# sp = [ - 8, 11, 0, -23, 140, 1]
# sp = filter(lambda x: 10 <= abs(x) < 100, sp)
# print(list(sp))

# 5.	Дан список, вывести отдельно буквы и цифры.
# a = ( '1', 'a', 'b', '2', '3' ,'c') 
# b = ( 'a' , 'b' , 'c')
# c = ( '1', '2', '3')

# spa =  ['1', 'a', 'b', '2', '3' ,'c']
# spb = filter(lambda x: x.isalpha(), spa)
# spc = filter(lambda x: x.isdigit(), spa)
# print(list(spb))
# print(list(spc))

# Предположим, вы переписываете у друга рецепты в блокнотик, но вам не нравится лук. Переписывайте без него.

# Формат ввода
# На первой строке вводится натуральное число N — количество пунктов рецепта.
# Далее следуют N строк — пункты рецепта.

# Формат вывода
# Одна строка — пункты рецепта, разделённые запятой и пробелом, без пунктов с упоминанием лука (то есть таких, в которых нет подстроки "лук" в нижнем регистре).

# Пример
# Ввод	                              Вывод
# 5
# лук 1 головка
# картофелин штук 6
# картошку почистить
# лук порезать кольцами
# зажарить всё
# #                                картофелин штук 6, картошку почистить, зажарить всё
sp = []
n = int(input())
for i in range(n):
    s = input()
    sp.append(s)


sp = filter(lambda x:"лук" not in x,sp)
print(', '.join(sp))